# This is a basic workflow to help you get started with Actions

name: Auto-versioning

# Controls when the workflow will run
on:
  workflow_call:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  versioning:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          
      - name: Reset Origin
        run: |
          git remote set-url origin "https://0nary:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          git checkout ${{ github.ref_name }}
#   github.actor will be the account how will perform the push (or most of the case 'merge pull request'). (May better to use github.triggering_actor for reruns.)
#   secrets.GITHUB_TOKEN was the token creates for the current action, it is associated with the actor and will persist until the end of the action.
#   github.ref_name work fine if the trigger was a push/merge.
          
      - name: Import bot's GPG key for signing commits
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
          
      - name: Setup CI GIT
        run: |
          git config user.name "${{ steps.import_gpg.outputs.name }}"
          git config user.email ${{ steps.import_gpg.outputs.email }}
          git config --global user.signingkey ${{ steps.import_gpg.outputs.keyid }}
          git config --global commit.gpgsign true
          
      - name: Install Versioning.NET
        run: |
          dotnet tool install --global Versioning.NET
          
      - name: Increment Version
        run: |
          dotnet-version increment-version -d "." -v Patch
          
      - name: Commit changes
        run: git commit -m "this is bot increment" -a    
        
      - name: Get commit id
        run: |
          git log -1 | grep ^commit | awk '{print $2}'
          echo "COMMIT_ID=$(git log -1 | grep ^commit | awk '{print $2}')"
          echo "${{COMMIT_ID}}"
        #deprecated
        #run: echo "::set-env name=commit_id::$(git log -1 | grep ^commit | awk '{print $2}')"
        
      - name: echo commit id
        run : echo "${{env.COMMIT_ID}}"
          
      - name: force push 
        run: git push --repo="https://0nary:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
